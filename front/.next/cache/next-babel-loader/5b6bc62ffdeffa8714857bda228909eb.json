{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nconst hashtag = ({\n  tag\n}) => {\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n\n  const onScroll = () => {\n    console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 250) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n\n    console.log(mainPosts[mainPosts.length - 1].id);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })));\n};\n\nhashtag.prototype = {\n  tag: PropTypes.string.isRequired\n};\n\nhashtag.getInitialProps = async context => {\n  const tag = context.query.tag;\n  console.log('해쉬태그다 해쉬태그', tag);\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag\n  });\n  return {\n    tag\n  };\n};\n\nexport default hashtag;","map":{"version":3,"sources":["/Users/hyundong/react-bird/front/pages/hashtag.js"],"names":["React","useEffect","PropTypes","useSelector","useDispatch","LOAD_HASHTAG_POSTS_REQUEST","PostCard","hashtag","tag","mainPosts","hasMorePost","state","post","dispatch","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","createdAt","prototype","string","isRequired","getInitialProps","context","query","store"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AACvB,QAAM;AAAEC,IAAAA,SAAF;AAAYC,IAAAA;AAAZ,MAA4BP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7C;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,QAAQ,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA6BC,QAAQ,CAACC,eAAT,CAAyBC,YAAtD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;;AACA,QAAGL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAuC,GAAnG,EAAuG;AACrG,UAAGZ,WAAH,EAAe;AACbG,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAElB,0BADC;AAEPmB,UAAAA,MAAM,EAAEf,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAkB,CAAnB,CAAT,CAA+BC,EAFhC;AAGPC,UAAAA,IAAI,EAAEnB;AAHC,SAAD,CAAR;AAKD;AACF;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAkB,CAAnB,CAAT,CAA+BC,EAA3C;AACD,GAZH;;AAcEzB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACD,KAFD;AAGD,GALQ,EAKP,CAACL,SAAS,CAACgB,MAAX,CALO,CAAT;AAMF,SACI,mBACKhB,SAAS,CAACqB,GAAV,CAAcC,CAAC,IACZ,MAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,IAAA,IAAI,EAAED;AAAnC,IADH,CADL,CADJ;AAOH,CA9BD;;AAgCAxB,OAAO,CAAC0B,SAAR,GAAoB;AAChBzB,EAAAA,GAAG,EAAGN,SAAS,CAACgC,MAAV,CAAiBC;AADP,CAApB;;AAIA5B,OAAO,CAAC6B,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AACzC,QAAM7B,GAAG,GAAG6B,OAAO,CAACC,KAAR,CAAc9B,GAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBR,GAAzB;AACA6B,EAAAA,OAAO,CAACE,KAAR,CAAc1B,QAAd,CAAuB;AACnBU,IAAAA,IAAI,EAAElB,0BADa;AAEnBsB,IAAAA,IAAI,EAAEnB;AAFa,GAAvB;AAIA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CARD;;AAUA,eAAeD,OAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nconst hashtag = ({tag}) => {\n    const { mainPosts,hasMorePost } = useSelector(state => state.post);\n    const dispatch = useDispatch();\n    const onScroll = () => {\n        console.log(window.scrollY,  document.documentElement.clientHeight,document.documentElement.scrollHeight);\n        if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight -250){\n          if(hasMorePost){\n            dispatch({\n              type: LOAD_HASHTAG_POSTS_REQUEST,\n              lastId: mainPosts[mainPosts.length -1].id,\n              data: tag\n            });\n          }\n        }\n        console.log(mainPosts[mainPosts.length -1].id);\n      };\n    \n      useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n          window.removeEventListener('scroll', onScroll);\n        }\n      },[mainPosts.length]);\n    return (\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={+c.createdAt} post={c}/>\n            ))}\n        </div>\n    );\n}\n\nhashtag.prototype = {\n    tag : PropTypes.string.isRequired\n}\n\nhashtag.getInitialProps = async (context) => {\n    const tag = context.query.tag\n    console.log('해쉬태그다 해쉬태그',tag);\n    context.store.dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        data: tag\n    })\n    return { tag }\n}\n\nexport default hashtag;"]},"metadata":{},"sourceType":"module"}