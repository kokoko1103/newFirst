{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  hasMorePost: false\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case UPLOAD_IMAGES_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: [...state.imagePaths, ...action.data]\n        });\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: state.imagePaths.filter((v, i) => i !== action.index)\n        });\n      }\n\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data, ...state.mainPosts],\n          postAdded: true,\n          imagePaths: []\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Comments = [...post.Comments, action.data.comment];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Comments = action.data.comments;\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts\n        });\n      }\n\n    case LOAD_USER_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.lastId === 0 ? [] : state.mainPosts\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.lastId === 0 ? [] : state.mainPosts,\n          hasMorePost: action.lastId ? state.hasMorePost : true\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.concat(action.data),\n          hasMorePost: action.data.length === 10\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Likers = [{\n          id: action.data.userId\n        }, ...post.Likers];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts\n        });\n      }\n\n    case LIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Likers = post.Likers.filter(v => v.id !== action.data.userId);\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts\n        });\n      }\n\n    case UNLIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data, ...state.mainPosts]\n        });\n      }\n\n    case RETWEET_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.filter(v => v.id !== action.data)\n        });\n      }\n\n    case REMOVE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/hyundong/react-bird/front/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","hasMorePost","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","state","action","type","data","filter","v","i","index","error","postIndex","findIndex","id","postId","post","Comments","comment","comments","lastId","concat","length","Likers","userId"],"mappings":"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","sourcesContent":["export const initialState = {\n  mainPosts: [], // 화면에 보일 포스트들\n  imagePaths: [], // 미리보기 이미지 경로\n  addPostErrorReason: '', // 포스트 업로드 실패 사유\n  isAddingPost: false, // 포스트 업로드 중\n  postAdded: false, // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  hasMorePost: false,\n};\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPLOAD_IMAGES_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case UPLOAD_IMAGES_SUCCESS: {\n      return {\n        ...state,\n        imagePaths: [...state.imagePaths, ...action.data],\n      };\n    }\n    case UPLOAD_IMAGES_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case REMOVE_IMAGE: {\n      return {\n        ...state,\n        imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\n      };\n    }\n    case ADD_POST_REQUEST: {\n      return {\n        ...state,\n        isAddingPost: true,\n        addPostErrorReason: '',\n        postAdded: false,\n      };\n    }\n    case ADD_POST_SUCCESS: {\n      return {\n        ...state,\n        isAddingPost: false,\n        mainPosts: [action.data, ...state.mainPosts],\n        postAdded: true,\n        imagePaths: [],\n      };\n    }\n    case ADD_POST_FAILURE: {\n      return {\n        ...state,\n        isAddingPost: false,\n        addPostErrorReason: action.error,\n      };\n    }\n    case ADD_COMMENT_REQUEST: {\n      return {\n        ...state,\n        isAddingComment: true,\n        addCommentErrorReason: '',\n        commentAdded: false,\n      };\n    }\n    case ADD_COMMENT_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = state.mainPosts[postIndex];\n      const Comments = [...post.Comments, action.data.comment];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = { ...post, Comments };\n      return {\n        ...state,\n        isAddingComment: false,\n        mainPosts,\n        commentAdded: true,\n      };\n    }\n    case ADD_COMMENT_FAILURE: {\n      return {\n        ...state,\n        isAddingComment: false,\n        addCommentErrorReason: action.error,\n      };\n    }\n    case LOAD_COMMENTS_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = state.mainPosts[postIndex];\n      const Comments = action.data.comments;\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = { ...post, Comments };\n      return {\n        ...state,\n        mainPosts,\n      };\n    }\n    case LOAD_USER_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:{\n      return {\n        ...state,\n        mainPosts: action.lastId === 0 ? [] : state.mainPosts\n      }\n    }\n    case LOAD_MAIN_POSTS_REQUEST: {\n      return {\n        ...state,\n        mainPosts: action.lastId === 0 ? [] : state.mainPosts,\n        hasMorePost: action.lastId ? state.hasMorePost : true,\n      };\n    }\n    case LOAD_MAIN_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS: {\n      return {\n        ...state,\n        mainPosts: state.mainPosts.concat(action.data),\n        hasMorePost: action.data.length === 10,\n      };\n    }\n    case LOAD_MAIN_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case LIKE_POST_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case LIKE_POST_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = state.mainPosts[postIndex];\n      const Likers = [{ id: action.data.userId }, ...post.Likers];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = { ...post, Likers };\n      return {\n        ...state,\n        mainPosts,\n      };\n    }\n    case LIKE_POST_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case UNLIKE_POST_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case UNLIKE_POST_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = state.mainPosts[postIndex];\n      const Likers = post.Likers.filter(v => v.id !== action.data.userId);\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = { ...post, Likers };\n      return {\n        ...state,\n        mainPosts,\n      };\n    }\n    case UNLIKE_POST_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case RETWEET_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case RETWEET_SUCCESS: {\n      return {\n        ...state,\n        mainPosts: [action.data, ...state.mainPosts],\n      };\n    }\n    case RETWEET_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    case REMOVE_POST_REQUEST: {\n      return {\n        ...state,\n      };\n    }\n    case REMOVE_POST_SUCCESS: {\n      return {\n        ...state,\n        mainPosts: state.mainPosts.filter(v => v.id !== action.data),\n      };\n    }\n    case REMOVE_POST_FAILURE: {\n      return {\n        ...state,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}