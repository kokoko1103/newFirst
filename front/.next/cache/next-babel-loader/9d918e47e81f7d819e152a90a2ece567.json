{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nvar hashtag = function hashtag(_ref) {\n  var tag = _ref.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  var dispatch = useDispatch();\n\n  var onScroll = function onScroll() {\n    console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 250) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n\n    console.log(mainPosts[mainPosts.length - 1].id);\n  };\n\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }));\n};\n\nhashtag.prototype = {\n  tag: PropTypes.string.isRequired\n};\n\nhashtag.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var tag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tag = context.query.tag;\n            console.log('해쉬태그다 해쉬태그', tag);\n            context.store.dispatch({\n              type: LOAD_HASHTAG_POSTS_REQUEST,\n              data: tag\n            });\n            return _context.abrupt(\"return\", {\n              tag: tag\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default hashtag;","map":{"version":3,"sources":["/Users/hyundong/react-bird/front/pages/hashtag.js"],"names":["React","useEffect","PropTypes","useSelector","useDispatch","LOAD_HASHTAG_POSTS_REQUEST","PostCard","hashtag","tag","state","post","mainPosts","hasMorePost","dispatch","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","createdAt","prototype","string","isRequired","getInitialProps","context","query","store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAW;AAAA,MAATC,GAAS,QAATA,GAAS;;AAAA,qBACWL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADtB;AAAA,MACfC,SADe,gBACfA,SADe;AAAA,MACLC,WADK,gBACLA,WADK;;AAEvB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA6BC,QAAQ,CAACC,eAAT,CAAyBC,YAAtD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;;AACA,QAAGL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAuC,GAAnG,EAAuG;AACrG,UAAGV,WAAH,EAAe;AACbC,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAElB,0BADC;AAEPmB,UAAAA,MAAM,EAAEb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAkB,CAAnB,CAAT,CAA+BC,EAFhC;AAGPC,UAAAA,IAAI,EAAEnB;AAHC,SAAD,CAAR;AAKD;AACF;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACA,SAAS,CAACc,MAAV,GAAkB,CAAnB,CAAT,CAA+BC,EAA3C;AACD,GAZH;;AAcEzB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,YAAM;AACXG,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACD,KAFD;AAGD,GALQ,EAKP,CAACH,SAAS,CAACc,MAAX,CALO,CAAT;AAMF,SACI,mBACKd,SAAS,CAACmB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED;AAAnC,MADY;AAAA,GAAf,CADL,CADJ;AAOH,CA9BD;;AAgCAxB,OAAO,CAAC0B,SAAR,GAAoB;AAChBzB,EAAAA,GAAG,EAAGN,SAAS,CAACgC,MAAV,CAAiBC;AADP,CAApB;;AAIA5B,OAAO,CAAC6B,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB7B,YAAAA,GADgB,GACV6B,OAAO,CAACC,KAAR,CAAc9B,GADJ;AAEtBO,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBR,GAAzB;AACA6B,YAAAA,OAAO,CAACE,KAAR,CAAc1B,QAAd,CAAuB;AACnBU,cAAAA,IAAI,EAAElB,0BADa;AAEnBsB,cAAAA,IAAI,EAAEnB;AAFa,aAAvB;AAHsB,6CAOf;AAAEA,cAAAA,GAAG,EAAHA;AAAF,aAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeD,OAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nconst hashtag = ({tag}) => {\n    const { mainPosts,hasMorePost } = useSelector(state => state.post);\n    const dispatch = useDispatch();\n    const onScroll = () => {\n        console.log(window.scrollY,  document.documentElement.clientHeight,document.documentElement.scrollHeight);\n        if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight -250){\n          if(hasMorePost){\n            dispatch({\n              type: LOAD_HASHTAG_POSTS_REQUEST,\n              lastId: mainPosts[mainPosts.length -1].id,\n              data: tag\n            });\n          }\n        }\n        console.log(mainPosts[mainPosts.length -1].id);\n      };\n    \n      useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n          window.removeEventListener('scroll', onScroll);\n        }\n      },[mainPosts.length]);\n    return (\n        <div>\n            {mainPosts.map(c => (\n                <PostCard key={+c.createdAt} post={c}/>\n            ))}\n        </div>\n    );\n}\n\nhashtag.prototype = {\n    tag : PropTypes.string.isRequired\n}\n\nhashtag.getInitialProps = async (context) => {\n    const tag = context.query.tag\n    console.log('해쉬태그다 해쉬태그',tag);\n    context.store.dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        data: tag\n    })\n    return { tag }\n}\n\nexport default hashtag;"]},"metadata":{},"sourceType":"module"}