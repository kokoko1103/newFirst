{"version":3,"file":"static/webpack/static/development/pages/hashtag.js.e36787ad881729881717.hot-update.js","sources":["webpack:///./pages/hashtag.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nconst Hashtag = ({ tag }) => {\n  const dispatch = useDispatch();\n  const countRef = useRef([]);\n\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\n\n  const onScroll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n          let lastId = mainPosts[mainPosts.length -1].id;\n          if(!countRef.current.includes(lastId)){\n            dispatch({\n                type: LOAD_HASHTAG_POSTS_REQUEST,\n                lastId,\n                data: tag,\n              });\n              countRef.current.push(lastId);\n          }\n      }\n    }\n    console.log('라스트아이디 찾기',mainPosts[mainPosts.length -1].id);\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n\n  return (\n    <div>\n      {mainPosts.map(c => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </div>\n  );\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired,\n};\n\nHashtag.getInitialProps = async (context) => {\n  const tag = context.query.tag;\n  console.log('hashtag getInitialProps', tag);\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag,\n  });\n  return { tag };\n};\n\nexport default Hashtag;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAJA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}